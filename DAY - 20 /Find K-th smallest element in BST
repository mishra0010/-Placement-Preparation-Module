/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int kthSmallest(TreeNode* root, int k) {
       priority_queue<int>max_h;
       traversal(root, k,max_h);
        return max_h.top();
    }
    void traversal(TreeNode* root,int k,priority_queue<int>&max_h)
    {

        if(root==NULL)
        return;
        else
        {
            traversal(root->left,k,max_h);
            max_h.push(root->val);
            if(max_h.size()>k)
            max_h.pop();
            traversal(root->right,k,max_h);
        }
    }
};
